# See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
backend_shill/.bundle

# Ignore the default SQLite database.
backend_shill/db/*.sqlite3
backend_shill/db/*.sqlite3-journal
backend_shill/db/*.sqlite3-*

# Ignore all logfiles and tempfiles.
backend_shill/log/*
backend_shill/tmp/*
!/log/.keep
!/tmp/.keep

# Ignore pidfiles, but keep the directory.
backend_shill/tmp/pids/*
!/tmp/pids/
!/tmp/pids/.keep

# Ignore uploaded files in development.
backend_shill/storage/*
!/storage/.keep

backend_shill/public/assets
.byebug_history

# Ignore master key for decrypting credentials and more.
backend_shill/config/master.key

backend_shill/public/packs
backend_shill/public/packs-test
backend_shill/node_modules
backend_shill/yarn-error.log
yarn-debug.log*
.yarn-integrity
.DS_Store


# front-end ignores below
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
frontend_shill/node_modules
frontend_shill/.pnp
./frontend_shill/.eslintcache
.pnp.js

# testing
frontend_shill/coverage

# production
frontend_shill/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

.eslintcache